<% content_for :page_title do %>
  Testing page title
<% end %>

<% content_for :page_actions do %>
  <li>
    <%= button_link_to Spree.t(:new_order), new_admin_order_url, :icon => 'icon-plus', :id => 'admin_new_order' %>
  </li>
<% end if can? :edit, Spree::Order.new %>

<%= render :partial => 'spree/admin/shared/order_sub_menu' %>


<% content_for :table_filter_title do %>
  <%= Spree.t(:search) %>
<% end %>

<% content_for :table_filter do %>
  <div data-hook="admin_orders_by_taxon_index_search">
    <%= search_form_for @search, url: '/by-taxons' do |f| %>
      <div class="alpha three columns">
        <div class="date-range-filter field">
          <%#= label_tag nil, Spree.t(:date_range) %>
          <%= label_tag 'Orders On Or Before' %>
          <div class="date-range-fields">
            <%= f.text_field :created_at_lt, :class => 'datepicker datepicker-to', :value => params[:q][:created_at_lteq], :placeholder => 'On or Before', :length => "15" %>
          </div>
        </div>
      </div>

      <div class="nine columns">
        <div class="field" data-hook="admin_orders_taxons_field">
          <%= f.label :line_items_product_taxons_name_cont, Spree.t(:taxons) %><br />
          <%= f.hidden_field :line_items_product_taxons_name_cont, :placeholder => "Search By Taxons", :length => "15", :style => "width: 100%;" %>
        </div>
      </div>

      <div class="omega four columns">
        <div class="field checkbox">
          <label>
            <%= f.check_box :completed_at_not_null, {:checked => @show_only_completed}, '1', '0' %>
            <%= Spree.t(:show_only_complete_orders) %>
          </label>
        </div>

      <div class="clearfix"></div>

      <div class="actions filter-actions">
        <div data-hook="admin_orders_index_search_buttons">
          <%= button Spree.t(:filter_results), 'icon-search' %>
        </div>
      </div>
    <% end %>
  </div>
<% end %>

<%= paginate @orders %>

<% if @orders.any? %>
  <table class="index responsive" id="listing_orders" data-hook>
    <colgroup>
       <col style="width: 13%;">
       <col style="width: 10%;">
       <col style="width: 10%;">
       <col style="width: 12%;">

       <col style="width: 25%;">
       <col style="width: 10%;">
       <col style="width: 8%;">
    </colgroup>
    <thead>
      <tr data-hook="admin_orders_index_headers">
        <% if @show_only_completed %>
          <th><%= sort_link @search, :completed_at, I18n.t(:completed_at, :scope => 'activerecord.attributes.spree/order') %></th>
        <% else %>
          <th><%= sort_link @search, :created_at,   I18n.t(:created_at, :scope => 'activerecord.attributes.spree/order') %></th>
        <% end %>
        <th><%= sort_link @search, :number,         I18n.t(:number, :scope => 'activerecord.attributes.spree/order') %></th>
        <th><%= sort_link @search, :state,          I18n.t(:state, :scope => 'activerecord.attributes.spree/order') %></th>
        <th><%= sort_link @search, :payment_state,  I18n.t(:payment_state, :scope => 'activerecord.attributes.spree/order') %></th>

        <th><%= sort_link @search, :email,          I18n.t(:email, :scope => 'activerecord.attributes.spree/order') %></th>
        <th><%= sort_link @search, :total,          I18n.t(:total, :scope => 'activerecord.attributes.spree/order') %></th>
        <th data-hook="admin_orders_index_header_actions" class="actions"></th>
      </tr>
    </thead>
    <tbody>
    <% @orders.each do |order| %>
      <tr data-hook="admin_orders_index_rows" class="state-<%= order.state.downcase %> <%= cycle('odd', 'even') %>">
        <td class="align-center"><%= l (@show_only_completed ? order.completed_at : order.created_at).to_date %></td>
        <td class="align-center"><%= link_to order.number, edit_admin_order_path(order) %></td>
        <td class="align-center"><span class="state <%= order.state.downcase %>"><%= Spree.t("order_state.#{order.state.downcase}") %></span></td>
        <td class="align-center"><span class="state <%= order.payment_state %>"><%= link_to Spree.t("payment_states.#{order.payment_state}"), admin_order_payments_path(order) if order.payment_state %></span></td>

        <td><%= mail_to order.email %></td>
        <td class="align-center"><%= order.display_total.to_html %></td>
        <td class='actions align-center' data-hook="admin_orders_index_row_actions">
          <%= link_to_edit_url edit_admin_order_path(order), :title => "admin_edit_#{dom_id(order)}", :no_text => true %>
        </td>
      </tr>
    <% end %>
    </tbody>
  </table>
<% else %>
  <div class="alpha twelve columns no-objects-found">
    <%= Spree.t(:no_resource_found, resource: I18n.t(:other, scope: 'activerecord.models.spree/order')) %>,
    <%= link_to Spree.t(:add_one), spree.new_admin_order_path %>!
  </div>
<% end %>

<%= paginate @orders %>

<%= javascript_tag do %>
  $(document).ready(function () {
    'use strict';

    if ($('<%= "#q_line_items_product_taxons_name_cont" %>').length > 0) {
      $('<%= "#q_line_items_product_taxons_name_cont" %>').select2({
        placeholder: Spree.translations.taxon_placeholder,
        multiple: true,
        width: "style",
        initSelection: function (element, callback) {
          var url = Spree.url(Spree.routes.taxons_search, {
            ids: element.val()
          });
          return $.getJSON(url, null, function (data) {
            return callback(data['taxons']);
          });
        },
        ajax: {
          url: Spree.routes.taxons_search,
          datatype: 'json',
          data: function (term, page) {
            return {
              per_page: 50,
              page: page,
              q: {
                name_cont: term
              },
              token: Spree.api_key
            };
          },
          results: function (data, page) {
            var more = page < data.pages;
            return {
              results: data['taxons'],
              more: more
            };
          }
        },
        formatResult: function (taxon) {
          return taxon.pretty_name;
        },
        formatSelection: function (taxon) {
          return taxon.pretty_name;
        }
      });
    }
  });
<% end %>

